# -*- coding: utf-8 -*-
"""
Created on Wed Jan 22 23:14:58 2014

@author: dirkhovy
"""

import sys
import codecs
import glob
from collections import defaultdict
import argparse

parser = argparse.ArgumentParser(description="tag a text file with wiktionary labels if the sentence is unambiguous")
parser.add_argument('input', help='input text file')
parser.add_argument('--dictionary', help='wiktionary file')
parser.add_argument('--normalize', help="normalization dictionary")

args = parser.parse_args()


#numbers = re.compile(r"")

dictionary = defaultdict(set)
for line in codecs.open(args.dictionary, encoding='utf-8'):
    en, word, tag, _ = line.strip().split("\t")
    dictionary[word.lower()].add(tag)

# extend with Baldwin mappings
if args.normalize:
    for line in codecs.open(args.normalize, encoding='utf-8'):
        twitter_word, org_word = line.strip().split("\t")
        if org_word.lower() in dictionary:
            dictionary[twitter_word.lower()].update(dictionary[org_word.lower()])
        

# for tweet_file in glob.glob("%s/*.txt" % sys.argv[-1]):
#     sys.stderr.write("%s\n" % tweet_file)

for line in codecs.open(args.input, encoding='utf-8'):
    line = line.strip()
    result = []

    write = True
    contains_real_word = False
    words = line.split(" ")
    for i, word in enumerate(words):

        if i == 0 and word == "RT":
            write = False
            break

        # take care of easy cases: URLS and user names
        if word.startswith("http"):
            result.append((word, "NOUN"))
        elif word.startswith("@"):
            result.append((word, "NOUN"))

        # for other words, try to retrieve the tag set
        else:
            # remove '#' for hashtags
            if word.startswith("#"):
                tags = dictionary[word[1:].lower()]
            else:
                tags = dictionary[word.lower()]

            if '0' in word:
                tags.add('NUM')

            # check whether word is unambiguous
            if len(tags) == 0:
                # saving heuristics go here...
                if result and result[-1][1] in set(["DET"]) and "NOUN" in tags:
                    result.append((word, "NOUN"))
                else:
                    result.append(('UNK', ""))

            else:
                result.append((word, ",".join(tags)))


    print codecs.encode("\n".join([u"%s\t%s" % (word, tag) for word, tag in result]), "utf-8")
    print